name: Build WSA Magisk
on:
  schedule:
    - cron: "0 13 * * *"
  push:
    branches: [main]
  workflow_dispatch:
  repository_dispatch:
    types: [build]

concurrency: 
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64]
        release: [WIF]
        gapps: [LiteGapps]
        gapps-variant: [core]
        root: [magisk]
        magisk-ver: [canary]
        compress-format: [zip]
        preview-program-builds: [yes]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: lzip patchelf e2fsprogs python3 python3-pip aria2 p7zip-full attr unzip sudo whiptail qemu-utils
          version: 1.0

      - name: Install Python venv & its libraries
        run: |
          python3 -c "import venv" >/dev/null 2>&1 || {
              if ! (sudo apt-get install "python3-venv"); then
                  abort
              fi
          }
          echo "Creating python3 virtual env"
          python3 -m venv --system-site-packages "$(dirname "$PWD")/python3-env" || {
               echo "Failed to upgrade python3 virtual env, clear and recreate"
               python3 -m venv --clear --system-site-packages "$(dirname "$PWD")/python3-env" || abort "Failed to create python3 virtual env"
          }
          source "$(dirname "$PWD")/python3-env/bin/activate" || abort "Failed to activate python3 virtual env"
          python3 -c "import pkg_resources; pkg_resources.require(open('scripts/requirements.txt',mode='r'))" &>/dev/null || {
               echo "Installing Python3 dependencies"
               python3 -m pip install -r scripts/requirements.txt || abort "Failed to install python3 dependencies"
          }
          deactivate
          if [[ "${{ matrix.preview-program-builds }}" == "yes" ]]; then
            mkdir -p ./download/ >/dev/null 2>&1
            # wget --progress=bar:force:noscroll -O ./download/wsa-${{ matrix.release }}.zip $(wget -q -O - https://api.github.com/repos/MustardChef/WSAPackages/releases/latest | jq -r '.assets[] | .browser_download_url')
            # tag=$(wget -q -O - "https://api.github.com/repos/MustardChef/WSAPackages/tags" | jq -r '.[0].name'); wget --progress=bar:force:noscroll -O ./download/wsa-${{ matrix.release }}.zip "https://github.com/MustardChef/WSAPackages/releases/download/${tag}/MicrosoftCorporationII.WindowsSubsystemForAndroid_${tag#WSA_}_neutral_._8wekyb3d8bbwe.Msixbundle"
            tag=$(wget -q -O - "https://api.github.com/repos/bubbles-wow/WSA-Archive/tags" | jq -r '.[0].name'); wget --progress=bar:force:noscroll -O ./download/wsa-${{ matrix.release }}.zip "https://github.com/bubbles-wow/WSA-Archive/releases/download/${tag}/MicrosoftCorporationII.WindowsSubsystemForAndroid_${tag}_neutral_._8wekyb3d8bbwe.Msixbundle"
          fi

      - name: Grant executable permission
        run: chmod +x ./scripts/build.sh

      - name: Build WSA GAPPS ${{ matrix.root }} ${{ matrix.arch }}
        id: wsa
        run: |
          if [[ "${{ matrix.preview-program-builds }}" == "yes" ]]; then
            ./scripts/build.sh --arch ${{ matrix.arch }} --release-type ${{ matrix.release }} --gapps-brand ${{ matrix.gapps }} --gapps-variant ${{ matrix.gapps-variant }} --root-sol ${{ matrix.root }} --magisk-ver ${{ matrix.magisk-ver }} --remove-amazon --skip-download-wsa --compress-format ${{ matrix.compress-format }}
          else
            ./scripts/build.sh --arch ${{ matrix.arch }} --release-type ${{ matrix.release }} --gapps-brand ${{ matrix.gapps }} --gapps-variant ${{ matrix.gapps-variant }} --root-sol ${{ matrix.root }} --magisk-ver ${{ matrix.magisk-ver }} --remove-amazon --compress-format ${{ matrix.compress-format }}
          fi

      - name: Prepare release tag
        id: date
        run: echo "date=$(date +'v%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Upload build to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./output/${{ steps.wsa.outputs.artifact }}.${{ matrix.compress-format }}
          tag: ${{ steps.date.outputs.date }}
          overwrite: true
          file_glob: true
